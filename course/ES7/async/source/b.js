function getSomething() {
    return "something";
}

function testPromise() {
    return Promise.resolve("hello promise");
}

async function testAsync() {
    return Promise.resolve("hello async");
}

async function test() {
    const v1 = await getSomething();
    const v2 = await testPromise();    
    const v3 = await testAsync();
    console.log(v1, v2, v3);
);
}

test();

/*
如果它等到的不是一个 Promise 对象，那 await 表达式的运算结果就是它等到的东西。

如果它等到的是一个 Promise 对象，await 就忙起来了，它会阻塞后面的代码，等着 Promise 对象 resolve，然后得到 resolve 的值，作为 await 表达式的运算结果。
*/

